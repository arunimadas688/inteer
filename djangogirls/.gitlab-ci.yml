stages:
  - test
  - build
  - deploy


unittest:
    stage: test
    services:
    - postgres:alpine
    variables:
        POSTGRES_DB: inteer
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: custom_pass
    image: centos:7
    script:
        - yum -y update
        - yum -y install sudo epel-release
        - yum install -y https://centos7.iuscommunity.org/ius-release.rpm
        - yum install -y python36u python36u-libs python36u-devel python36u-pip
        - yum -y install postgresql-server postgresql postgresql-contrib postgresql-devel
        - yum install -y wget gcc make zlib-dev openssl-devel sqlite-devel bzip2-devel
        - yum install -y libcurl-devel libtiff-devel libjpeg-devel libzip-devel
        - yum install -y freetype-devel lcms2-devel libwebp-devel tcl-devel tk-devel
        - yum install -y cups-devel libxslt-devel libxml2-devel
        - "curl https://bootstrap.pypa.io/get-pip.py | python3.6"
        - pip3 install -r requirements.txt
        - export db_host=postgres
        - export password=$POSTGRES_PASSWORD
        - python3.6 manage.py migrate
        - python3.6 manage.py test tests/ 


build:
  stage: build
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    CI_IMAGE: $CI_REGISTRY/gaurangkher/inteerapp
  only:
    - master
  script:
    - echo "Building the app"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --cache-from $CI_IMAGE:latest -t $CI_IMAGE:latest .
    - docker push $CI_IMAGE:latest

deploy_staging:
  stage: deploy
  script:
    - echo "Deploy to staging server"
  environment:
    name: staging
  only:
  - master

deploy_prod:
  stage: deploy
  script:
    - echo "Deploy to production server"
  environment:
    name: production
  when: manual
  only:
  - master

