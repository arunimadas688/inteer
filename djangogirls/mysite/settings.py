
"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from datetime import timedelta
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5gwvttt1ul-jup@f=31zinyf-gqw=p*mahp=09m7bg!z_yhwlkmtl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

app_host = os.environ.get('app_host', '138.197.3.122')
ALLOWED_HOSTS = [app_host, 'localhost']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'mptt',
    'adminpanel',
    'frontend',
    'enumfields'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'corsheaders.middleware.CorsPostCsrfMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
passwd = os.environ.get('password', 'p0sInteer') # postgres
host = os.environ.get('db_host', '127.0.0.1') # host.docker.internal
port =  os.environ.get('db_port', '') # 5432

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'inteer',
        'USER': 'postgres',
        'PASSWORD': passwd,
        'HOST': host,
        'PORT': port,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_DIRS = [
    # ...
    ("common", "/var/www/html/inteer/common"),
    ("media", "/var/www/html/inteer/media/"),
    ("upload", "/var/www/html/inteer/static/upload"),
    ("upload_images", "/var/www/html/inteer/static/upload_images"),
    ("inteerangular", "/var/www/html/inteer/inteerangular/"),
]

MEDIA_ROOT = '/var/www/html/inteer/media'
MEDIA_URL = '/media/'



UPLOAD_URL = os.path.join(STATIC_ROOT,'upload/')
UPLOAD_URL_ROOT = 'http://%s:8009/static/upload/' % app_host

UPLOAD_IMAGES_URL = os.path.join(STATIC_ROOT,'upload_images/')
UPLOAD_IMAGES_URL_ROOT = 'http://%s:8009/static/upload_images/' % app_host

PROFILE_IMAGE_URL = os.path.join(STATIC_ROOT,'upload_images/profile_image/')
PROFILE_IMAGE_ROOT = 'http://%s:8009/static/upload_images/profile_image/' % app_host

ORGANISATION_IMAGE = os.path.join(STATIC_ROOT,'upload_images/organisation_image/')
ORGANISATION_IMAGE_ROOT = 'http://%s:8009/static/upload_images/organisation_image/' % app_host

OPPORTUNITY_IMAGE_URL = os.path.join(STATIC_ROOT,'upload_images/opportunity_image/')
OPPORTUNITY_IMAGE_ROOT = 'http://%s:8009/static/upload_images/opportunity_image/' % app_host

UPLOAD_URL_CSV = os.path.join(STATIC_ROOT,'media/all_excel')
UPLOAD_URL_ROOT_CSV = 'http://%s:8009/static/media/all_excel' % app_host
#STATICFILES_DIRS = (
#    ('', os.path.join(BASE_DIR,'static')), #store site-specific media here.
#)
PATH_URL = 'http://%s/inteerApp/#'% app_host
PYTHON_URL = 'http://%s:8009/'
IMAGE_URL = 'http://%s:8009/static/media/' % app_host

BASE_URL = 'http://%s:8009' % app_host

APP_URL = 'http://138.197.3.122/inteerApp/'




EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Host for sending e-mail.
EMAIL_USE_TLS = True

EMAIL_HOST = 'smtp.gmail.com'

EMAIL_HOST_USER = 'mail@cbnits.com'

EMAIL_HOST_PASSWORD = 'cbnits@1234'

EMAIL_PORT = 587

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)
CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with','responsetype'
)

################################ STRIPE SETTINGS ########################################

STRIPE_SECRET_KEY       = 'sk_test_xiVlg4LKfaTvQrfU8LomiEb400f7EQTXLd'
STRIPE_PUBLISHABLE_KEY  = 'pk_test_x9k3CeShGSaDeQN51H9Q4WwS00CnWehzy8'

# STRIPE_SECRET_KEY       = 'sk_live_2UKIbEqgN9ijMLVJ4b7Pv7GU00KzKpOjNF'
# STRIPE_PUBLISHABLE_KEY  = 'pk_live_KVyIaxEONyRe0uRQei2bBON200UDAe0T7B'
STRIPE_PRODUCT_ID = 'prod_GCtzKIadGhIQjp' 
# STRIPE_PRODUCT_ID = 'prod_GLf56okSWlHZgg' #LIVE
STRIPE_PLAN_ID_DICT = {
                0:['plan_GDxcBWvRR5AISi','plan_GDxXX9BWCO1Dce','plan_GHnoTOwhdFrBMp','plan_GHnp8BbT85MjQi','plan_GDxbccR3VCbgaq','plan_GDxhr0sWhTES6V','plan_GDxiASqjY11bvO','plan_GHnuu1NuTsNObi','plan_GHnvU3j1zOpQiD','plan_GDxlJYRDgoix11'],
                1:['free'],
                2:['enterprise']
            }
STRIPE_PRODUCT_ID_LIST = [0,1]

TRIAL_PERIOD =30
PACKAGE_NAME = ['PREMIUM','BASIC','ENTERPRISE']

################################ STRIPE SETTINGS ########################################

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.TokenAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
    ),
}

JWT_AUTH = { 
    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
}
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),
}

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240