# Generated by Django 2.0.2 on 2019-12-17 00:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('adminpanel', '0019_auto_20190929_1334'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(blank=True, max_length=200, null=True)),
                ('author_name', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(null=True, upload_to='opportunity')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart_id', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('quantity', models.IntegerField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('image', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sortname', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Opportunitiesapplied',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_url', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='OpportunityQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OpportunitySaved',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OpportunityShared',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.BooleanField(default=False)),
                ('twitter', models.BooleanField(default=False)),
                ('linkedin', models.BooleanField(default=False)),
                ('google', models.BooleanField(default=False)),
                ('org_id_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PayementInformations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volunteer_number', models.TextField(blank=True, null=True)),
                ('customer_id', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('token', models.TextField(blank=True, null=True)),
                ('package', models.TextField(blank=True, null=True)),
                ('plan_id', models.TextField(blank=True, null=True)),
                ('plan_type', models.TextField(blank=True, null=True)),
                ('trial_period', models.TextField(blank=True, null=True)),
                ('subscription_id', models.TextField(blank=True, null=True)),
                ('subscription_start_date', models.TextField(blank=True, null=True)),
                ('subscription_end_date', models.TextField(blank=True, null=True)),
                ('subscribed', models.BooleanField(default=False)),
                ('subscription_response', models.TextField(blank=True, null=True)),
                ('plan_response', models.TextField(blank=True, null=True)),
                ('product_response', models.TextField(blank=True, null=True)),
                ('subscription_mode', models.TextField(blank=True, null=True)),
                ('charge_response', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='products_images/')),
            ],
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('country_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Countries')),
            ],
        ),
        migrations.CreateModel(
            name='Subadminmenulist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pagename', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlanDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('package', models.TextField(blank=True, null=True)),
                ('plan', models.TextField(blank=True, null=True)),
                ('plan_id', models.TextField(blank=True, null=True)),
                ('volunteer_number', models.TextField(blank=True, null=True)),
                ('payment_mode', models.TextField(blank=True, null=True)),
                ('payment_environment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Volunteersactivities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Activities')),
            ],
        ),
        migrations.RenameField(
            model_name='opportunityanswers',
            old_name='user_id',
            new_name='user',
        ),
        migrations.AddField(
            model_name='cordinatorrequest',
            name='is_request',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='cordinatorrequest',
            name='is_url',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='cordinatorrequest',
            name='oppurtunity_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='cordinatorrequest',
            name='role',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='opportunities',
            name='lat',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='opportunities',
            name='lon',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='opportunities',
            name='repeat_number',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='organization',
            name='status',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='organization',
            name='user_id',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='subscribed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='subscription_end_date',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='email',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='no_hours',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='org_id_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='v_phone',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='opportunityanswers',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.OpportunityQuestions'),
        ),
        migrations.AddField(
            model_name='volunteersactivities',
            name='opportunity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities'),
        ),
        migrations.AddField(
            model_name='volunteersactivities',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subadminmenulist',
            name='userprofile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.UserProfile'),
        ),
        migrations.AddField(
            model_name='payementinformations',
            name='subscription_plan_details_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.SubscriptionPlanDetails'),
        ),
        migrations.AddField(
            model_name='payementinformations',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payementinformations',
            name='userprofile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.UserProfile'),
        ),
        migrations.AddField(
            model_name='opportunityshared',
            name='opportunity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities'),
        ),
        migrations.AddField(
            model_name='opportunityshared',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='opportunitysaved',
            name='opportunity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities'),
        ),
        migrations.AddField(
            model_name='opportunitysaved',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='opportunityquestions',
            name='opportunity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities'),
        ),
        migrations.AddField(
            model_name='opportunitiesapplied',
            name='opportunity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities'),
        ),
        migrations.AddField(
            model_name='opportunitiesapplied',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedback',
            name='opportunity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cities',
            name='state_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.States'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='adminpanel.Product'),
        ),
        migrations.AddField(
            model_name='activities',
            name='opportunity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities'),
        ),
    ]
