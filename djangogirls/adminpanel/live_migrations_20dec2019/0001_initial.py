# Generated by Django 2.0.1 on 2018-01-31 09:00

import adminpanel.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import enumfields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('category_image', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(blank=True, max_length=200, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('type_offield', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_title', models.CharField(max_length=200, null=True)),
                ('banner_text', models.TextField(blank=True, null=True)),
                ('banner_image', models.ImageField(null=True, upload_to='banners')),
                ('banner_order', models.IntegerField(null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Blogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(null=True)),
                ('cover_pic', models.ImageField(null=True, upload_to='logo')),
                ('slug', models.CharField(max_length=200, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('text', models.TextField(null=True)),
                ('slug', models.CharField(max_length=200, null=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('banner_image', models.ImageField(null=True, upload_to='media')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fromemail', models.TextField(blank=True, null=True)),
                ('from_name', models.TextField(blank=True, null=True)),
                ('subject', models.TextField(blank=True, null=True)),
                ('phone_number', models.TextField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('is_replied', models.IntegerField(blank=True, null=True)),
                ('entry_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CordinatorRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', enumfields.fields.EnumField(enum=adminpanel.models.status, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='EmailTemplates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('templatename', models.TextField(blank=True, null=True)),
                ('templatebody', models.TextField(blank=True, null=True)),
                ('subject', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HowitWorks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('pic', models.ImageField(null=True, upload_to='media')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_title', models.CharField(max_length=200, null=True)),
                ('logo_image', models.ImageField(null=True, upload_to='logo')),
                ('medium_pic', models.TextField(blank=True, null=True)),
                ('thumbnail_pic', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Opportunities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opportunity_name', models.CharField(blank=True, max_length=200, null=True)),
                ('author_name', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('is_valid', enumfields.fields.EnumField(enum=adminpanel.models.valid, max_length=1)),
                ('is_public', enumfields.fields.EnumField(enum=adminpanel.models.valid, max_length=1)),
                ('is_recurring', enumfields.fields.EnumField(enum=adminpanel.models.valid, max_length=1)),
                ('no_ofyear', models.IntegerField(blank=True, null=True)),
                ('parent_opportunity', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.ActivityCategory')),
            ],
        ),
        migrations.CreateModel(
            name='OpportunityNotifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities')),
            ],
        ),
        migrations.CreateModel(
            name='OpportunityTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=200, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('address', models.IntegerField(blank=True, null=True)),
                ('tax_id', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200, null=True)),
                ('web_url', models.CharField(max_length=200, null=True)),
                ('phone', models.CharField(max_length=200, null=True)),
                ('cause', models.TextField(blank=True, null=True)),
                ('about_us', models.TextField(blank=True, null=True)),
                ('our_activity', models.TextField(blank=True, null=True)),
                ('why_us', models.TextField(blank=True, null=True)),
                ('photo', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='RecurringOpportunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('type_ofrecuring', models.IntegerField(blank=True, null=True)),
                ('days_oftheweek', models.TextField(blank=True, null=True)),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities')),
            ],
        ),
        migrations.CreateModel(
            name='Reminders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.CharField(blank=True, max_length=200, null=True)),
                ('end_date', models.TextField(blank=True, null=True)),
                ('status', enumfields.fields.EnumField(enum=adminpanel.models.valid, max_length=1)),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities')),
            ],
        ),
        migrations.CreateModel(
            name='SeoPages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pagename', models.TextField(null=True)),
                ('meta_title', models.TextField(null=True)),
                ('meta_keyword', models.TextField(null=True)),
                ('meta_description', models.TextField(null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='SiteNotifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('notificationype', models.CharField(max_length=200, null=True)),
                ('detailid', models.IntegerField(blank=True, null=True)),
                ('read', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('fromid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_from', to=settings.AUTH_USER_MODEL)),
                ('toid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_to', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('cover_pic', models.ImageField(null=True, upload_to='logo')),
                ('slug', models.CharField(max_length=200, null=True)),
                ('urls', models.CharField(max_length=200, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=200, null=True)),
                ('profile_image', models.TextField(null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('about_me', models.TextField(null=True)),
                ('physical_ability', models.TextField(null=True)),
                ('is_verified', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('interest_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Interest')),
            ],
        ),
        migrations.CreateModel(
            name='UserRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_type', models.CharField(max_length=200)),
                ('desc', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volunteer_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_json', models.TextField(blank=True, null=True)),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Volunteers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_volunteer', models.CharField(blank=True, max_length=200, null=True)),
                ('number_ofvolunteer', models.IntegerField(blank=True, null=True)),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities')),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('isapproved', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', enumfields.fields.EnumField(enum=adminpanel.models.valid, max_length=1)),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='userprofile',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.UserRoles'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organizationtags',
            name='tag_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Tags'),
        ),
        migrations.AddField(
            model_name='opportunitytags',
            name='tag_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Tags'),
        ),
        migrations.AddField(
            model_name='opportunities',
            name='org_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Organization'),
        ),
        migrations.AddField(
            model_name='opportunities',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='opportunities',
            name='volunteer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Volunteer'),
        ),
        migrations.AddField(
            model_name='cordinatorrequest',
            name='org_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Organization'),
        ),
        migrations.AddField(
            model_name='cordinatorrequest',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='activityfields',
            name='opportunity_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities'),
        ),
        migrations.AddField(
            model_name='activitycategory',
            name='opportunity_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.Opportunities'),
        ),
    ]
